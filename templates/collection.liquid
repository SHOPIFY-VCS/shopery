{% paginate collection.products by 1 %}
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 md:px-8 xl:px-0">
    <h1>Collection Page</h1>
    <h3>{{ collection.title }}</h3>
    <br>
    {% comment %} =======  {% endcomment %}
    <select id="sort-by">
      {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

      {% for option in collection.sort_options %}
        <option
          value="{{ option.value }}"
          {% if option.value == sort_by %}
            selected="selected"
          {% endif %}
        >
          {{ option.name }}
        </option>
      {% endfor %}
    </select>
    {% comment %} ======== {% endcomment %}
    <br>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
      {% for product in collection.products %}
        {% render 'product-item-grid', product: product %}
      {% endfor %}
    </div>
    {{ paginate | default_pagination }}
  </div>
{% endpaginate %}

<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function (e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>
